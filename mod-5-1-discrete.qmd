---
title: "Discrete Random Variables"
format:
  html:
    toc: true
    toc-depth: 3
    toc-location: right
    self-contained: false     # must be false when using webr
urlcolor: blue
filters:
  - webr
execute:
  webR: true
---

```{r setup, echo = FALSE, message = FALSE}

library(dplyr, quietly = TRUE)
library(ggplot2, quietly = TRUE)
library(kableExtra, quietly = TRUE)
library(tidyquant, quietly = TRUE)

```

## Discrete Random Variables

A **random variable** is a numerical description of an outcome of an example.

A **discrete random variable** may assume a **finite** or **infinite** number of values.

A fair coin flip or roll of a six-sided die is a random experiment with a finite number of outcomes.

For the coin flip, the random variable is the face of the coin, the values of which are: heads (1) and tails (0).

For the six-sided die, the random variable the number of dots showing on the die, the values of which are: 1,2,3,4,5,6.

If the random experiment is operating a website for a 24-hour period, the random variable is the number of unique visitors to the website.

The values of the random variable are: 0, 1, 2, 3 ......

## Continuous Random Variables

A **continuous random variable** may assume any value in an interval or collection of intervals.

If we select 1,000 students at random who come to ODU today, the driving distance is bounded below at 0.

The driving distance is practically bounded above (maybe 200 miles?).

Driving distance is a continuous random variable as it can take on any value from 0 to infinity (and beyond!).

If the random experiment is a visit to a webpage by a customer, the random variable is the time spent on the page, with values of the random variable being $x \ge 0$.

If the random experiment is to fill a kiloliter container, the random variable is the amount of liquid in the container, with values of the random variable being $0 \le x \le 1\, kl$.

## Discrete Probability Distributions

The **probability distribution** for a random variable describes how probabilities are distributed over the values of the random variable.

Given a discrete random variable, $x$, a **probability function**, $f(x)$, provides the probability for each value of the random variable.

The **classical** method of assigning probabilities of the values of a random variable is used when the experimental outcomes generate values of the random variable that are equally likely.

Consider the experiment of rolling a six-sided die.

-   We know the sample space is $s = \{1, 2, 3, 4, 5, 6\}$

-   Let $x$ be the number obtained on one throw of the die

-   Let $f(x)$ be the probability of $x$

-   We can represent the probability of $x$ with a frequency table or graph.

In the code below, we run a simulated six-sided die 10,000 times.

-   The **sample** function takes a sample of the sequence of integers from 1 to 6

-   The **size** option sets the number of samples to be taken

-   The **replace = TRUE** replaces the number sampled

-   The **group_by** identifies the bins

-   The **summarize** command estimates the frequencies and relative frequencies

```{webr-r}

rm(list = ls())

throws = 10000

throw_list <- list()

rolls <- tibble(throw = sample(1:6, size = throws, replace = TRUE)) %>%
  group_by(throw) %>%
  summarize(freq     = n(),
            rel_freq = n()/throws)

ggplot(data = rolls,
        aes(x = throw,
            y = rel_freq,
            fill = throw)) +
geom_bar(stat = 'identity') +
geom_text(data  = rolls,
          aes(x = throw,
              y = rel_freq,
              label = scales::label_number(a=0.01)(rel_freq)),
          nudge_y   = 0.01) +
theme_minimal() +
theme(legend.position = " ") +
labs(title    = "Throws of a Six Sided Die",
     x        = " ",
     y        = "Relative Frequency")
```

## Frequency Tables

The relative frequency method is applicable when the data are "reasonably" large.

The discrete probability distribution that is developed using the relative frequency method is known as the **empirical discrete distribution**.

Two conditions are required for a discrete probability distribution.

$$f(x) \ge 0$$

$$\sum f(x) = 1$$ In the code below, we replicate the experiment of throwing a six-sided die 10,000 times. We estimate the relative frequency for each of the outcomes of the experiment and create a relative frequency table that missors the graph.

```{webr-r}

rm(list = ls())

throws = 10000

throw_list <- list()

rolls <- tibble(throw = sample(1:6, size = throws, replace = TRUE)) %>%
  group_by(throw) %>%
  summarize(freq     = n(),
            rel_freq = n()/throws)

kable(rolls,
      align       = "lcc", 
      format.args = list(big.mark = ",", 
                         scientific = FALSE),
      caption     = "Probability Distribution for Number\n
                     Obtained on One Roll of Six Sided Die",
      col.names   = c("Number (x)", "Frequency of X", 
                      "Probability of X - f(x)"))
```

## Discrete Probability Distribution

A formula that gives the probability function, $f(x)$ for every value of $x$ is known as a **discrete probability distribution**.

Using data, we developed the empirical discrete probability function for a fair six-sided die.

Let $n$ be equal to the number of values of that the random variable can take.

The **discrete uniform probability distribution** is then defined as:

$$f(x) = \frac{1}{n}$$

Note that we can apply the discrete uniform probability distribution function to several of our previous examples.

Flipping a fair coin: $$f(x) = \frac{1}{2}$$

Rolling a fair six-sided die: $$f(x) = \frac{1}{6}$$

## Expected Value

The **expected value**, or mean, of a random variable is a measure of the central location of the random variable.

The expected value of $x$ is defined as

$$E(x) = \mu = \sum x \, f(x)$$

For the six-side die experiment, the expected value will approach 3.5 as the number of rolls increases.

```{webr-r}

rm(list = ls())

library(janitor)

throws = 10000

throw_list <- list()

rolls <- tibble(throw = sample(1:6, size = throws, replace = TRUE)) %>%
  group_by(throw) %>%
  summarize(freq     = n(),
            rel_freq = n()/throws) %>%
  mutate(xfx = throw * rel_freq) %>%
  adorn_totals(where = "row", name = "Sums")


kable(rolls,
      align       = "lcccc", 
      format.args = list(big.mark = ",", 
                         scientific = FALSE),
      caption     = "Rolls of Six-Sided Die",
      col.names   = c("Number (x)", "Frequency of X", 
                      "Probability of X - f(x)", "x * f(x)")) 
```

\]\]
