---
title: "Introduction to Probability"
format:
  html:
    toc: true
    toc-depth: 3
    toc-location: right
    self-contained: false     # must be false when using webr
urlcolor: blue
filters:
  - webr
execute:
  webR: true
---

```{r setup, echo = FALSE, message = FALSE}

library(dplyr, quietly = TRUE)
library(ggplot2, quietly = TRUE)
library(kableExtra, quietly = TRUE)
library(tidyquant, quietly = TRUE)

```

## Defining Probablity

**Probability** is a measure of the likelihood that an outcome will occur.

If a fair coin has tails on one side and heads on the other side, we understand, over thousands of flips (trials), that we will observe heads 50% of the time and tails 50% of the time. Assuming that no flips end up on the edge, the **likelihood** of heads for a fair coin is 0.50 while the **likelihood** of tails is 0.50.

Probability is a numerical measure of the likelihood of an outcome and is bounded between 0 and 1, including 0 and 1. If the probability of an outcome is 'close' to zero, then it is less likely to occur than an outcome that is 'closer' to 1.

In other words, if the outcome of the outcome is beneficial (winning a prize), we would prefer that the probability of the outcome be higher (closer to 1) than lower. Likewise, if the outcome of the outcome if not beneficial (incurring a costly bill), we would prefer the probability of the outcome be lower (closer to 0) than higher.

## Experiments and Randomness

**A random experiment is a process that generates outcomes.**

In our coin flipping example, the process of flipping the coin generates two possible outcomes, heads or tails. The outcomes are well defined prior to the start of the experiment and the outcomes are mutually exclusive. In other words, an outcome must be either heads or tails and there is not a possible outcome where heads and tails occur simultaneously.

**Each repetition of the experiment is a trial.**

An experiment may consist of one trial, several trials, or many trials. However many trials there are in an experiment, the outcome of each trial is a random event, that is, the outcome is not pre-determined and occurs by chance.

Consider an unfair six-sided die that is weighted so that it lands on six on every throw. Throwing the die is not a random experiment because the outcome of every trial is known prior to the experiment. Regardless of whether you throw the die one time or fifty times, the outcome is always six. Now compare this to a fair six sided die. On any given trial, the die could land on 1, 2, 3, 4, 5, or 6. The outcome of any specific trial is unknown prior to its occurrence but, over repeated trials, we know the probability of each outcome.

We have now discussed two random experiments, the flipping of a fair coin and the toss of a fair six sided tie. In the case of the fair coin, we have identified two possible outcomes: heads and tails. In the case of the fair six sided die, we have identified six possible outcomes: 1, 2, 3, 4, 5, and 6.

**The set of possible outcomes for each random experiment is known as the sample space.**

The sample space consists of the mutually exclusive and collectively exhaustive outcomes of a random experiment.

*Mutually exclusive implies that a random experiment cannot have the same outcome simultaneously.*

*Collectively exhaustive implies that all the outcomes of the random experiment are contained in the sample space.*

## Multistep Counting Rules

Consider a fair 10-sided tie.

The potential outcomes of any trial are

$$s = \{1, 2, 3, 4, 5, 6, 7, 8 , 9, 10\}$$ What happens if we conduct two trails?

There are ten possible outcomes of the first trial and ten possible outcomes in the second trial. But what are number of outcomes for the multistep experiment?

Assume that you roll a 1 on the first trial. The set of possible outcomes of the first trial $o_1$ are:

$$o_1 = \{(1,1), (1,2), (1,3), (1,4), (1,5), (1,6), (1,7), (1,8), (1,9), (1,10) \}$$

And if you roll a 2 on the first trial, then the set of possible outcomes are:

$$o_2 = \{(2,1), (2,2), (2,3), (2,4), (2,5), (2,6), (2,7), (2,8), (2,9), (2,10) \}$$

If the first roll produces a 1, there are 10 possible outcomes. If the first roll produces a 2, there are 10 different outcomes, and so on.

Extending this logic yields 100 possible outcomes for the two trial experiment with a fair ten-sided tie.

Given a random experiment with a sequence of $k$-steps and $n_1, n_2, ..., n_k$ outcomes for each step, then the number of outcomes in the sample space is equal to:

$$n_1 \times n_2 \times ... \times n_k$$ The random experiment of rolling a 10-sided die two times has $k = 2$ steps and the number of outcomes of each step is equal to $n_1 = 10, n_2 = 10$. The number of outcomes is equal to

$$n_1 \times n_2 = 10 \times 10 = 100$$

## Multistep Examples

In our first example, assume we are flipping a fair two-sided coin five times.

Given that $k = 5$ and $n_1 = 5, n_2 = 5, n_3 = 5, n_4 = 5, n_5 = 5$, then number outcomes in the sample space of the random experiment is equal to:

$$s = n_1 \times n_2 \times n_3 \times n_4 \times n_5 = 2 \times 2 \times 2 \times 2 \times 2 = 2^5 = 32$$

In our second example, assume that we are throwing a fair six-sided die followed by a fair two-sided coin followed by a fair twenty-sided die.

Given that $k =3$ and $n_1 = 6, n_2 = 2, n_3 = 20$, then the number of outcomes in the sample space is equal to:

$$n_1 \times n_2 \times n_3 = 6 \times 2 \times20 = 240$$

## Factorials

A factorial is merely a series of products and are indicated by an exclamation mark.

The factorial function of a positive integer $n$ is defined as the product of all the positive integers not greater than $n$.

$$
n! = 1 \times 2 \times 3\ \times 4 \dots (n-2) \times (n-1) \times n
$$ For example, 5 factorial can be represented as

$$
5! = 5 \times 4 \times 3 \times 2 \times 1 = 120
$$

In R, the function **factorial** allows one to estimate the factorial of a positive integer

```{webr-r}

rm(list = ls())

factorials <- tibble(w = factorial(3), 
                     x = factorial(5), 
                     y = factorial(6), 
                     z = factorial(8))

kable(factorials,
      align = 'c')

```

## Combinations

In our previous examples, the number of steps and outcomes for each step was relatively small. Determining the number of outcomes in a sample space can quickly become tedious, or, as complexity increases, hard. We can, however, rely on two counting rules to assist us in determining the number of outcomes in a sample space. The difference between the two counting rules is whether the order of the outcomes matters.

**A combination examines the number of ways the objects can be selected, without regard to the order in which they are selected.**

A bowl of vegetable soup contains a different vegetables and the number of vegetables may differ by type. We don't care about ordering since all the vegetables together make soup.

*Assume we have four objects (A,B,C,D), and we select one object at a time without replacement and draw all the objects.*

Let's list the possible combinations:

-   ABCD

Why is there only one combination? Remember, the order does not matter. In other words, ABCD is the same as BCAD which is the same as CABD which is the same as BACD and so on.

*Assume now that we have the four objects and we select two objects at a time without replacement.*

Assume the objects are labeled A, B, C, D and the order of drawing is not important (AC is the same as drawing CA), then the number of possible combinations:

-   AB

-   AC

-   AD

-   BC

-   BD

-   CD

Given four objects and two objects are selected at a time, there are six possible combinations.

*Consider the same number of objects (4) and draw three objects at a time without replacement.*

Assume the objects are labeled A, B, C, D and the order of drawing is not important (AC is the same as drawing CA), then the number of possible combinations:

-   ABC

-   ABD

-   ACD

-   BCD

There are four possible combinations.

Obviously, if the number of objects becomes 'large,' it would be quite difficult to list all the possible combinations.

## Combination Formula

The number of combinations of $N$ objects taken $n$ at a time is equal:

$$C_n^N =  \binom{N}{n} = \frac{N!}{n!(N-n)!}$$ Returning to the example where there were four objects and one object is selected at a time without replacement, note that $N = 4$ and $n = 1$, we can calculate that there are 4 possible combinations that can be drawn.

$$C_1^4 =  \binom{4}{1} = \frac{4!}{1!(4-1)!} = \frac{24}{6} = 4$$

Returning to the example where there were four objects and two objects were selected at a time without replacement, note that $N = 4$ and $n = 2$, we can calculate that there are 6 possible combinations that can be drawn.

$$C_2^4 =  \binom{4}{2} = \frac{4!}{2!(4-2)!} = \frac{24}{4} = 6$$ Returning to the example where there were four objects and two objects were selected at a time without replacement, note that $N = 4$ and $n = 3$, we can calculate that there are 4 possible combinations that can be drawn.

$$C_3^4 =  \binom{4}{3} = \frac{4!}{3!(4-3)!} = \frac{24}{6} = 4$$

## Combinations in R

In the following examples, we show how to calculate the factorial of a value in R, the manual calculation of combination without replacement, and using the **choose}** function to calculate the combination without replacement.

```{webr-r}

rm(list = ls())

library(gtools)

# Combination Manually - N = 4, n = 2
# N!/n!(N-n)!

w <- factorial(4)/(factorial(2)*factorial(4-2))

# Combination without repetition or replacement
# N = 4, n = 2

x <- choose(4,2)

# Combination without replacement
# N = 50, n = 10

y <- factorial(50)/(factorial(10)*factorial(50-10))

z <- choose(50,10)

combos <- tibble(w,x,y,z)

kable(combos,
      align     = 'c',
      col.names = c('C(4,2)','C(4,2)','C(50,10)', 'C(50,10)'))
```

## Lottery Example

A good example is a lottery. Assume that the lottery requires you to pick six numbers from 1 to 70. The numbers are picked without replacement. In other words, there are 70 objects ($N$) and 6 objects ($n$) are selected without replacement?

How many possible outcomes are there in the sample space for this lottery? The example code below demonstrates how to calculate the number of outcomes in the sample space when there are 70 objects and 6 objects are selected without replacement. There are 131,115,985 possible combinations or outcomes in the sample space for this experiment.

However, lotteries found that larger jackpots attracted more customers. How do you boost the jackpot? One method is to have players pick a number of balls from one set of numbers without replacement and then another ball from another set of numbers. This "megaball" or "powerball" increases the number of possible combinations.

In the Virginia lottery Megamillions game, you pick 5 balls from 70 balls and then one ball from a separate 25 balls. The number of possible outcomes is equal to the combination of 70 balls picking 5 without replacement and then 1 ball from 25 possible balls. As you can see in the example below, the number of potential combinations increases to 302,575,350.

```{webr-r}

rm(list = ls())

library(gtools)

#Combination - Draw 6 from 70 Outcomes

w <- factorial(70)/(factorial(6)*factorial(70-6))
  
x <- choose(70,6)

#Combination - Draw 5 from 70 and 1 from 25

y <- (factorial(70)/(factorial(5)*factorial(70-5)))*25

z <- choose(70,5)*25

combos <- tibble(w,x,y,z)

kable(combos,
      align     = 'c',
      col.names = c('C(4,2)','C(4,2)','C(50,10)', 'C(50,10)'))
```

## Permutations

While a combination does not require the objects to be drawn in a specific order, a **permutation** requires a specific ordering of objects.

One way to think about permutations is "this, then that." In other words, one object must be drawn before another object for each possible outcome. Think about throwing a fair six-sided die two times. A roll of 1 on the first throw and 2 on the second throw is different than a roll of 2 on the first roll and 1 on the second roll. The order of selection is important unlike combinations.

Let $N$ be the number of objects and $n$ are the number of objects that are selected without replacement. The number of permutations of $N$ objects taken $n$ at a time is defined as:

$$
P_n^N = n! \binom{N}{n} = \frac{N!}{(N-n)!}
$$

Because the ordering matters, the number of outcomes from an ordered experiment is higher than the number of outcomes in an unordered experiment. In other words $P_n^N \ge C_n^N$.

To see this, assume that there are four possible objects:

-   Black (B)

-   Green (G)

-   Red (R)

-   White (W)

Given four objects, assume that two objects are selected without replacement.

Combinations (6): BG, BR, BW, GR, GW, RW

Permutations (12): BG, BR, BW, GB, GR, GW, RB, RG, RW, WB, WG, WR

In the example code below, the number of combinations and permutations are calculated manually.

```{webr-r}

rm(list = ls())

# 4 objects, select 2

object <- tibble(combos = factorial(4)/(factorial(2)*factorial(4-2)),
                 perms  = factorial(4)/factorial(4-2))

kable(object,
      align = 'c',
      col.names = c('C(4,2)', 'P(4,2)'))
```

## Permutation Example

In the example code below, the number of combinations and permutations are calculated using the **choose** and **permutations** functions.

The **combination** and **permutations** functions will create a matrix of outcomes for the random experiment.

These matrices grow large quickly and it may be more efficient to manually code the combinations and permutations.

```{webr-r}

rm(list = ls())

library(gtools)

x <- c("Black", "Green", "Red", "White")

object <-tibble(combos_m = factorial(4)/(factorial(2)*factorial(4-2)),
                combos_a = choose(4,2),
                perms    = factorial(4)/factorial(4-2),
                perms_a  = nrow(permutations(n=4,r=2,v=x)))

kable(object,
      align = 'c',
      col.names = c('C(4,2)', 'C(4,2)', 'P(4,2)', 'P(4,2)'))

# Create Matrices of the Possible Combinations and Permutations

combo_1 <- combinations(n = 4, r = 2, v = x)

perm_1 <- permutations(n=4,r=2,v=x)

kable(combo_1,
      align = 'c',
      caption = 'C(4,2)')

kable(perm_1,
      align = 'c',
      caption = 'P(4,2)')

```
