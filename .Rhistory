fx <- tibble(combo_x <- factorial(n)/(factorial(x)*factorial(n - x)),
fx_calc <- combo_x *p^(x)*(1-p)^(n-x),
fx_calc2 <- choose(n,x)*p^(x)*(1-p)^(n-x),
fx_func <- dbinom(x, n, p))
kable(fx,
align       = "cccc",
digits      = 3,
format.args = list(big.mark = ",", scientific = FALSE),
caption     = "P(x=92) with n = 100 and p = 0.95",
col.names   = c("Combinations",
"Calculated ",
"Combination Function",
"Binomial Function")) %>%
kable_styling(font_size = 14)
pbinom(5,10,0.95)
pbinom(5,100,0.95)
pbinom(9,100,0.95)
pbinom(9,10,0.95)
pbinom(8,10,0.95)
pbinom(7,10,0.95)
rm(list = ls())
n = 10
x = 7
p = 0.95
fx <- tibble(pmf <- dbinom(x, n, p),
cdf <- pbinom(x, n, p),
cdf_a <- dbinom(0, 10, 0.95) + dbinom(1, 10, 0.95) +
dbinom(2, 10, 0.95) + dbinom(3, 10, 0.95) +
dbinom(4, 10, 0.95) + dbinom(5, 10, 0.95) +
dbinom(6, 10, 0.95) + dbinom(8, 10, 0.95))
kable(fx,
align       = "cc",
format.args = list(big.mark = ",", scientific = FALSE),
caption     = "N = 10 and p = 0.95",
col.names   = c("PMF(x) ", "CDF(x)")) %>%
kable_styling(font_size = 14,
full_width = TRUE)
View(fx)
fx <- tibble(pmf <- dbinom(x, n, p),
cdf <- pbinom(x, n, p),
cdf_a <- dbinom(0, 10, 0.95) + dbinom(1, 10, 0.95) +
dbinom(2, 10, 0.95) + dbinom(3, 10, 0.95) +
dbinom(4, 10, 0.95) + dbinom(5, 10, 0.95) +
dbinom(6, 10, 0.95) + dbinom(7, 10, 0.95))
View(fx)
rm(list = ls())
n = 10
x = 7
p = 0.95
fx <- tibble(pmf <- dbinom(x, n, p),
cdf <- pbinom(x, n, p),
cdf_a <- dbinom(0, 10, 0.95) + dbinom(1, 10, 0.95) +
dbinom(2, 10, 0.95) + dbinom(3, 10, 0.95) +
dbinom(4, 10, 0.95) + dbinom(5, 10, 0.95) +
dbinom(6, 10, 0.95) + dbinom(7, 10, 0.95))
kable(fx,
align       = "c",
digits      = 3,
caption     = "N = 10 and p = 0.95",
col.names   = c("PMF(X = x) ", "CDF(X <= x)", "CDF( <= x)")) %>%
kable_styling(font_size = 14,
full_width = TRUE)
rm(list = ls())
n = 10
x = 7
p = 0.95
fx <- tibble(pmf <- dbinom(x, n, p),
cdf <- pbinom(x, n, p),
cdf_a <- dbinom(0, 10, 0.95) + dbinom(1, 10, 0.95) +
dbinom(2, 10, 0.95) + dbinom(3, 10, 0.95) +
dbinom(4, 10, 0.95) + dbinom(5, 10, 0.95) +
dbinom(6, 10, 0.95) + dbinom(7, 10, 0.95))
kable(fx,
align       = "c",
digits      = 4,
caption     = "N = 10 and p = 0.95",
col.names   = c("PMF(X = x) ", "CDF(X <= x)", "CDF( <= x)")) %>%
kable_styling(font_size = 14,
full_width = TRUE)
x <- 1:100
lines_1 <- tibble(x, p_x = dbinom(x, size = 100, prob = 0.3),
prob = 0.1)
lines_2 <- tibble(x, p_x = dbinom(x, size = 100, prob = 0.4),
prob = 0.3)
lines_3 <- tibble(x, p_x = dbinom(x, size = 100, prob = 0.5),
prob = 0.5)
lines <- bind_rows(lines_1, lines_2, lines_3)
ggplot(lines,
aes(x     = x,
y     = p_x,
group = prob,
fill  = prob)) +
geom_col() +
facet_wrap(vars(prob)) +
theme_minimal() +
theme(legend.position = " ") +
labs(title = "Binomial Probability Function",
x     = " ",
y     = "P(X = x)")
View(lines)
rm(list = ls())
x <- 1:100
lines_1 <- tibble(x, p_x = dbinom(x, size = 100, prob = 0.3),
prob = 0.1)
lines_2 <- tibble(x, p_x = dbinom(x, size = 100, prob = 0.4),
prob = 0.3)
lines_3 <- tibble(x, p_x = dbinom(x, size = 100, prob = 0.5),
prob = 0.5)
lines <- bind_rows(lines_1, lines_2, lines_3)
ggplot(lines,
aes(x     = x,
y     = p_x,
group = prob,
fill  = prob)) +
geom_col() +
facet_wrap(vars(prob)) +
theme_minimal() +
theme(legend.position = " ") +
labs(title = "Binomial Probability Function",
x     = " ",
y     = "P(X = x)")
rm(list = ls())
x <- 1:100
lines_1 <- tibble(x, p_x = pbinom(x, size = 100, prob = 0.3),
prob = 0.1)
lines_2 <- tibble(x, p_x = pbinom(x, size = 100, prob = 0.4),
prob = 0.3)
lines_3 <- tibble(x, p_x = pbinom(x, size = 100, prob = 0.5),
prob = 0.5)
lines <- bind_rows(lines_1, lines_2, lines_3)
ggplot(lines,
aes(x     = x,
y     = p_x,
group = prob,
fill  = prob)) +
geom_col() +
facet_wrap(vars(prob)) +
theme_minimal() +
theme(legend.position = " ") +
labs(title = "Binomial Probability Mass Function",
x     = " ",
y     = "P(X = x)")
rm(list = ls())
x <- 1:100
lines_1 <- tibble(x, p_x = dbinom(x, size = 100, prob = 0.3),
prob = 0.1)
lines_2 <- tibble(x, p_x = dbinom(x, size = 100, prob = 0.4),
prob = 0.3)
lines_3 <- tibble(x, p_x = dbinom(x, size = 100, prob = 0.5),
prob = 0.5)
lines <- bind_rows(lines_1, lines_2, lines_3)
ggplot(lines,
aes(x     = x,
y     = p_x,
group = prob,
fill  = prob)) +
geom_col() +
facet_wrap(vars(prob)) +
theme_minimal() +
theme(legend.position = " ") +
labs(title = "Binomial Probability Mass Function",
x     = " ",
y     = "P(X = x)")
rm(list = ls())
library(dplyr)
library(kableExtra)
n = 50
x = 23
p = 0.55
fx <- tibble(pmf <- dbinom(x, n, p),
cdf <- pbinom(x, n, p),
ev  <- n*p,
var <- n*p*(1-p),
sd  <- sqrt(n*p*(1-p)))
kable(fx,
align       = "c",
digits      = 4,
caption     = "N = 50, X = 23, and p = 0.55",
col.names   = c("PMF(X = x) ",
"CDF(X <= x)",
"Expected Value",
"Variance",
"Standard Deviation")) %>%
kable_styling(font_size = 14,
full_width = TRUE)
library(dplyr, quietly = TRUE)
library(ggplot2, quietly = TRUE)
library(kableExtra, quietly = TRUE)
library(tidyquant, quietly = TRUE)
# mu_60 = 10 per 60 seconds
# mu_15 = 2.5 per 15 second
poissons <- tibble(p_x0_1min <- ppois(0, 10),
p_x12_1min <- ppois(12, 10),
p_xle3_1min <- ppois(3, 10),
p_x0_15sec <- ppois(0, 2.5),
p_xge1_15sec <- 1-dpois(0, 2.5))
kable(poissons,
align       = "ccccc",
format.args = list(big.mark = ",", scientific = FALSE),
caption     = "Poisson with mu = 10 in 1 Minute",
col.names   = c("P(x=0, 1 min)",
"P(x=12, 1 min)",
"P(x<3, 1 min)",
"P(x=0, 15 sec)",
"P(x>0, 15 sec)")) %>%
kable_styling(font_size = 14)
(10/60)*15
dpois(1, 10)
x <- 1:20
lines_1 <- tibble(x, p_x = dpois(x, 10), mu = 5)
lines_2 <- tibble(x, p_x = dpois(x, 20), mu = 10)
lines_3 <- tibble(x, p_x = dpois(x, 30), mu = 20)
lines <- bind_rows(lines_1, lines_2, lines_3)
ggplot(lines,
aes(x     = x,
y     = p_x,
group = mu,
fill  = mu)) +
geom_col(colour = "black") +
facet_wrap(vars(mu)) +
theme_minimal() +
theme(legend.position = " ") +
labs(title = "Poisson Probability Function",
x     = " ",
y     = "P(X = x)")
x <- 1:20
lines_1 <- tibble(x, p_x = dpois(x, 5), mu = 5)
lines_2 <- tibble(x, p_x = dpois(x, 10), mu = 10)
lines_3 <- tibble(x, p_x = dpois(x, 20), mu = 20)
lines <- bind_rows(lines_1, lines_2, lines_3)
ggplot(lines,
aes(x     = x,
y     = p_x,
group = mu,
fill  = mu)) +
geom_col(colour = "black") +
facet_wrap(vars(mu)) +
theme_minimal() +
theme(legend.position = " ") +
labs(title = "Poisson Probability Function",
x     = " ",
y     = "P(X = x)")
x <- 1:20
lines_1 <- tibble(x, p_x = dpois(x, 5), mu = 5)
lines_2 <- tibble(x, p_x = dpois(x, 10), mu = 10)
lines <- bind_rows(lines_1, lines_2)
ggplot(lines,
aes(x     = x,
y     = p_x,
group = mu,
fill  = mu)) +
geom_col(colour = "black") +
facet_wrap(vars(mu)) +
theme_minimal() +
theme(legend.position = " ") +
labs(title = "Poisson Probability Function",
x     = " ",
y     = "P(X = x)")
x <- 1:20
lines_1 <- tibble(x, p_x = ppois(x, 5), mu = 10)
lines_2 <- tibble(x, p_x = ppois(x, 10), mu = 20)
lines <- bind_rows(lines_1, lines_2)
ggplot(lines,
aes(x     = x,
y     = p_x,
group = mu,
fill  = mu)) +
geom_col(colour = "black") +
facet_wrap(vars(mu)) +
theme_minimal() +
theme(legend.position = " ") +
labs(title = "Cumulative Poisson Probability Function",
x     = " ",
y     = "P(X = x)")
quarto::quarto_render()
quarto::quarto_render()
quarto::quarto_render()
unlink("docs/site_libs", recursive = TRUE, force = TRUE)
quarto render
quarto::quarto_render()
quarto::quarto_render()
library(dplyr, quietly = TRUE)
library(ggplot2, quietly = TRUE)
library(kableExtra, quietly = TRUE)
library(tidyquant, quietly = TRUE)
rm(list = ls())
library(dplyr)
library(kableExtra)
n  = 1000
p  = 0.75
x1 = 752
x2 = 775
fx <- tibble(fx_1 <- dbinom(x1,n,p),
fx_2 <- dbinom(x2,n,p))
kable(fx,
align       = "cc",
caption     = "Binomial PMF",
col.names   = c("P(X = 752)",
"P(X = 775)")) %>%
kable_styling(font_size = 14)
rm(list = ls())
library(dplyr)
library(kableExtra)
n  = 1000
p  = 0.75
x1 = 752
x2 = 775
fx <- tibble(fx_1 <- dbinom(x1,n,p),
fx_2 <- dbinom(x2,n,p))
kable(fx,
align       = "cc",
digits      = 3,
caption     = "Binomial PMF",
col.names   = c("P(X = 752)",
"P(X = 775)")) %>%
kable_styling(font_size = 14)
rm(list = ls())
library(dplyr)
library(kableExtra)
c <- 0.25
n <- 100
p <- 0.45
mu = 50
d  = 0.8
q_est <- tibble(q_binom <- qbinom(c, n, p),
p_binom <- pbinom(q_binom, n, p),
q_poisson <- qpois(d, mu),
p_poisson <- ppois(q_poisson, mu))
kable(q_est,
align       = "cccccc",
caption     = "Inverse CDF",
col.names   = c("q",
"Inverse CDF(q)",
"CDF(x)",
"q",
"Inverse CDF(q)",
"CDF(x)")) %>%
kable_styling(font_size = 14)
options(htmltools.dir.version = FALSE)
library(dplyr)
library(kableExtra)
library(ggplot2)
c <- 0.25
n <- 100
p <- 0.45
q_binom <- qbinom(c, n, p)
p_binom <- pbinom(q_binom, n, p)
mu = 50
d  = 0.8
q_poisson <- qpois(d, mu)
p_poisson <- ppois(q_poisson, mu)
q_est <- data.frame(c,q_binom, p_binom,
d,q_poisson, p_poisson)
kable(q_est,
align       = "cccccc",
caption     = "Inverse CDF",
col.names   = c("q",
"Inverse CDF(q)",
"CDF(x)",
"q",
"Inverse CDF(q)",
"CDF(x)")) %>%
kable_styling(font_size = 14)
rm(list = ls())
library(dplyr)
library(kableExtra)
c <- 0.25
n <- 100
p <- 0.45
mu = 50
d  = 0.8
q_est <- tibble(q_b = c,
q_binom <- qbinom(c, n, p),
p_binom <- pbinom(q_binom, n, p),
q_p = d,
q_poisson <- qpois(d, mu),
p_poisson <- ppois(q_poisson, mu))
kable(q_est,
align       = "cccccc",
caption     = "Inverse CDF",
col.names   = c("q",
"Inverse CDF(q)",
"CDF(x)",
"q",
"Inverse CDF(q)",
"CDF(x)")) %>%
kable_styling(font_size = 14)
rm(list = ls())
library(dplyr)
library(kableExtra)
n <- 10
x <- 3
p <- 0.3
x_1 <- 4
cdf_x1_d <- dbinom(0,10,0.3) + dbinom(1,10,0.3) +
dbinom(2,10,0.3) + dbinom(3,10,0.3) +
dbinom(4,10,0.3)
cdf_x1_p <- pbinom(4,10,0.3,lower.tail = TRUE)
cdf_x1_right <- 1 - pbinom(4,10,0.3,lower.tail = TRUE)
cdf_x1_right2 <- pbinom(4,10,0.3,lower.tail = FALSE)
cdf <- data.frame(cdf_x1_d, cdf_x1_p,
cdf_x1_right, cdf_x1_right2)
kable(cdf,
align       = "cccc",
caption     = "Binomial CDF",
col.names   = c("P(X <= 4)",
"P(X <= 4)",
"P(X > 4)",
"P(X > 4)")) %>%
kable_styling(font_size = 14)
rm(list = ls())
library(dplyr)
library(kableExtra)
n <- 10
x <- 3
p <- 0.3
x_1 <- 4
cdf <- tibble(cdf_x1_d <- dbinom(0,10,0.3) + dbinom(1,10,0.3) +
dbinom(2,10,0.3) + dbinom(3,10,0.3) +
dbinom(4,10,0.3),
cdf_x1_p <- pbinom(4,10,0.3,lower.tail = TRUE),
cdf_x1_right <- 1 - pbinom(4,10,0.3,lower.tail = TRUE),
cdf_x1_right2 <- pbinom(4,10,0.3,lower.tail = FALSE))
kable(cdf,
align       = "cccc",
caption     = "Binomial CDF",
col.names   = c("P(X <= 4)",
"P(X <= 4)",
"P(X > 4)",
"P(X > 4)")) %>%
kable_styling(font_size = 14)
rm(list = ls())
library(dplyr)
library(kableExtra)
c <- 0.25
n <- 100
p <- 0.45
mu = 50
d  = 0.8
q_est <- tibble(q_b = c,
q_binom <- qbinom(c, n, p),
p_binom <- pbinom(q_binom, n, p),
q_p = d,
q_poisson <- qpois(d, mu),
p_poisson <- ppois(q_poisson, mu))
kable(q_est,
align       = "cccccc",
caption     = "Inverse CDF",
col.names   = c("q",
"Inverse CDF(q)",
"CDF(x)",
"q",
"Inverse CDF(q)",
"CDF(x)")) %>%
kable_styling(font_size = 14)
#set the number of observations (experiments) to 5
r_binom <- rbinom(5,100,0.5)
r_poisson <- rpois(5, 10)
r_norm <- rnorm(5, 10, 2)
r_dist <- data.frame(r_binom, r_poisson, r_norm)
kable(r_dist,
align       = "ccc",
caption     = "Random Numbers",
col.names   = c("Binomal",
"Poisson",
"Normal")) %>%
kable_styling(font_size = 14)
quarto::quarto_render()
library(dplyr, quietly = TRUE)
library(ggplot2, quietly = TRUE)
library(kableExtra, quietly = TRUE)
library(tidyquant, quietly = TRUE)
rm(list = ls())
library(dplry)
rm(list = ls())
library(dplyr)
library(kableExtra)
n = 50
p = .8
x = 42
probs <- tibble(p_1 <- dbinom(x, n, p),
p_2 <- pbinom(x, n, p),
p_3 <- pbinom(x, n, p, lower.tail = FALSE))
rm(list = ls())
library(dplyr)
library(kableExtra)
n = 50
p = .8
x = 42
probs <- tibble(p_1 <- dbinom(x, n, p),
p_2 <- pbinom(x, n, p),
p_3 <- pbinom(x, n, p, lower.tail = FALSE))
kable(probs,
align = 'c',
digits = 3,
col.names = c('P(X = 42)', 'P(X <= 42)', 'P(X > 42')) %>%
kable_classic()
rm(list = ls())
library(dplyr)
library(kableExtra)
n = 50
p = .8
x = 42
probs <- tibble(p_1 <- dbinom(x, n, p),
p_2 <- pbinom(x, n, p),
p_3 <- pbinom(x, n, p, lower.tail = FALSE))
kable(probs,
align = 'c',
digits = 3,
col.names = c('P(X = 42)', 'P(X <= 42)', 'P(X > 42)')) %>%
kable_classic()
quarto::quarto_render()
