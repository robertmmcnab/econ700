kable_styling(full_width = FALSE, bootstrap_options = c("striped", "hover"))
rm(list = ls())
#kableExtra and dplyr are loaded
#Create X8 as equal to the sequence of numbers from 3 to 6
#Create X9 as equal to the sequence of numbers from 10 to 13
x8 <- 3:6
x9 <- 10:13
df1 <- data.frame(x8,x9)
df2 <- tibble(x8, x9)
kable(df1)
kable(df2)
kable(df1,
align = 'c') %>%
kable_classic()
kable(df2,
align = 'c') %>%
kable_styling()
rm(list = ls())
#Assign mtcars to cardata
cardata <- mtcars
# View structure of the data frame
head(cardata)
tail(cardata)
View(cardata)
library(dplyr)
library(tidyverse)
cardata2 <- cardata %>%
rownames_to_column() %>%
rename(car           = rowname) %>%
mutate(km_per_gallon = mpg*1.60934,
km_per_liter  = km_per_gallon*3.78541,
km2_per_liter = mpg*1.60934*3.78541) %>%
select(car, mpg, cyl, wt, km_per_gallon, km_per_liter, km2_per_liter)
kable(cardata[1:5,])
kable(cardata2[1:5,],
col.names = c("Car",
"MPG",
"Cylinders",
"Weight",
"Kilometers per Gallon",
"Kliometers per Liter",
"Squared KM/Gallon")) %>%
kable_classic()
rm(list = ls())
library(dplyr)
library(tidyverse)
cardata <- mtcars
cardata2 <- cardata %>%
rownames_to_column() %>%
rename(car           = rowname) %>%
mutate(km_per_gallon = mpg*1.60934,
km_per_liter  = km_per_gallon*3.78541,
km2_per_liter = mpg*1.60934*3.78541) %>%
select(car, mpg, cyl, wt, km_per_gallon, km_per_liter, km2_per_liter)
kable(cardata[1:5,])
kable(cardata2[1:5,],
col.names = c("Car",
"MPG",
"Cylinders",
"Weight",
"Kilometers per Gallon",
"Kliometers per Liter",
"Squared KM/Gallon")) %>%
kable_classic()
rm(list = ls())
library(dplyr)
library(kableExtra)
library(tidyverse)
cardata <- mtcars
cardata2 <- cardata %>%
rownames_to_column() %>%
rename(car           = rowname) %>%
mutate(km_per_gallon = mpg*1.60934,
km_per_liter  = km_per_gallon*3.78541,
km2_per_liter = mpg*1.60934*3.78541) %>%
select(car, mpg, cyl, wt, km_per_gallon, km_per_liter, km2_per_liter)
kable(cardata[1:5,])
kable(cardata2[1:5,],
col.names = c("Car",
"MPG",
"Cylinders",
"Weight",
"Kilometers per Gallon",
"Kliometers per Liter",
"Squared KM/Gallon")) %>%
kable_classic()
quarto::quarto_render()
# Clear Memory
rm(list = ls())
# Load Libraries
library(censusapi)
library(dplyr)
library(kableExtra)
library(tidyverse)
#B01001_001E is total population
#Case When to Create Categories
county_pop <- getCensus(name = "acs/acs5",
vintage = 2023,
key = "9c1637a56ff93f0af6b4b1d0547ea048fe668175",
vars = c("NAME",
"B01001_001E"),
region = "county:*") %>%
rename(total_pop = B01001_001E) %>%
mutate(pop_cat = case_when(total_pop > 99999 ~ "Greater than 99,999",
total_pop > 49999 ~ "50,000 - 99,999",
total_pop > 24999 ~ "25,000 - 49,999",
total_pop > 9999  ~ "10,000 - 24,999",
TRUE ~ "0 - 9,999"))
# Summarize to Create Frequencies by Categories
county_freq <- county_pop %>%
group_by(pop_cat) %>%
summarize(freq_pop = n()) %>%
arrange(pop_cat)
# Use frequency data frame to produce table
kable(county_freq,
col.names = c("Category", "Frequency"),
align = c('c','c'),
caption = 'Frequency of County Population, 2019') %>%
kable_styling(font_size = 14)
library(ggplot2)
ggplot(data = county_freq,
aes(x = pop_cat,
y = freq_pop,
fill = pop_cat)) +
geom_col() +
coord_flip() +
theme_minimal() +
theme(legend.position="none") +
labs(title = "Frequency of Total Population",
x = "Categories",
y = "Frequency")
rm(list = ls())
data("mtcars")
cyl_freq <- mtcars %>%
group_by(cyl) %>%
summarize(freq_cyl = n()) %>%
arrange(freq_cyl)
ggplot(data = cyl_freq,
aes(x = cyl_freq,
y = freq_cyl)) +
geom_col()
View(cyl_freq)
ggplot(data = cyl_freq,
aes(x = cyl,
y = freq_cyl)) +
geom_col()
ggplot(data = cyl_freq,
aes(x = cyl,
y = freq_cyl)) +
geom_col() +
labs(title    = 'Frequency Distribution for Cylinders',
subtitle = 'MTCARS data',
yaxis    = 'Frequency',
xaxis    = 'Number of Cylinders')
ggplot(data = cyl_freq,
aes(x = cyl,
y = freq_cyl)) +
geom_col() +
labs(title    = 'Frequency Distribution for Cylinders',
subtitle = 'MTCARS data',
y-axis    = 'Frequency',
ggplot(data = cyl_freq,
aes(x = cyl,
y = freq_cyl)) +
geom_col() +
labs(title    = 'Frequency Distribution for Cylinders',
subtitle = 'MTCARS data',
y        = 'Frequency',
x        = 'Number of Cylinders')
ggplot(data = cyl_freq,
aes(x    = cyl,
y    = freq_cyl,
fill = cyl)) +
geom_col() +
labs(title    = 'Frequency Distribution for Cylinders',
subtitle = 'MTCARS data',
y        = 'Frequency',
x        = 'Number of Cylinders')
ggplot(data = cyl_freq,
aes(x    = cyl,
y    = freq_cyl)) +
geom_col() +
labs(title    = 'Frequency Distribution for Cylinders',
subtitle = 'MTCARS data',
y        = 'Frequency',
x        = 'Number of Cylinders')
ggplot(data = cyl_freq,
aes(x    = cyl,
y    = freq_cyl)) +
geom_col(fill = 'darkblue') +
labs(title    = 'Frequency Distribution for Cylinders',
subtitle = 'MTCARS data',
y        = 'Frequency',
x        = 'Number of Cylinders')
quarto::quarto_render()
quarto::quarto_render()
quarto::quarto_render()
quarto::quarto_render()
rm(list = ls())
library(censusapi)
library(dplyr)
library(kableExtra)
library(tidyverse)
#B01001_001E is total population
#Case When to Create Categories
county_pop <- getCensus(name = "acs/acs5",
vintage = 2023,
key = "9c1637a56ff93f0af6b4b1d0547ea048fe668175",
vars = c("NAME",
"B01001_001E"),
region = "county:*") %>%
rename(total_pop = B01001_001E) %>%
mutate(pop_cat = case_when(total_pop > 99999 ~ "Greater than 99,999",
total_pop > 49999 ~ "50,000 - 99,999",
total_pop > 24999 ~ "25,000 - 49,999",
total_pop > 9999  ~ "10,000 - 24,999",
TRUE ~ "0 - 9,999"))
county_freq <- county_pop %>%
group_by(pop_cat) %>%
summarize(freq_pop = n()) %>%
mutate(rel_freq = freq_pop/sum(freq_pop)) %>%
arrange(pop_cat)
ggplot(data = county_freq,
aes(x = pop_cat,
y = rel_freq,
fill = rel_freq)) +
geom_col() +
coord_flip() +
theme_minimal() +
theme(legend.position="none") +
labs(title = "Frequency of Total Population",
x = "Categories",
y = "Relative Frequency")
ggplot(data = county_freq,
aes(x = pop_cat,
y = rel_freq,
fill = rel_freq)) +
geom_col() +
theme_minimal() +
theme(legend.position="none") +
labs(title = "Frequency of Total Population",
x = "Categories",
y = "Relative Frequency")
ggplot(data = county_freq,
aes(x = pop_cat,
y = rel_freq,
fill = rel_freq)) +
geom_col() +
scale_y_continuous(labels = percent(a = 1)) +
theme_minimal() +
theme(legend.position="none") +
labs(title = "Frequency of Total Population",
x = "Categories",
y = "Relative Frequency")
ggplot(data = county_freq,
aes(x = pop_cat,
y = rel_freq,
fill = rel_freq)) +
geom_col() +
scale_y_continuous(labels = scales::label_percent(a = 1)) +
theme_minimal() +
theme(legend.position="none") +
labs(title = "Frequency of Total Population",
x = "Categories",
y = "Relative Frequency")
ggplot(data = county_freq,
aes(x = pop_cat,
y = rel_freq,
fill = rel_freq)) +
geom_col() +
scale_y_continuous(labels = scales::label_percent(a = 1)) +
geom_text(data = county_freq,
aes(x = pop_cat,
y = rel_freq)) +
theme_minimal() +
theme(legend.position="none") +
labs(title = "Frequency of Total Population",
x = "Categories",
y = "Relative Frequency")
ggplot(data = county_freq,
aes(x = pop_cat,
y = rel_freq,
fill = rel_freq)) +
geom_col() +
scale_y_continuous(labels = scales::label_percent(a = 1)) +
theme_minimal() +
theme(legend.position="none") +
labs(title = "Frequency of Total Population",
x = "Categories",
y = "Relative Frequency")
ggplot(data = county_freq,
aes(x = pop_cat,
y = rel_freq,
fill = rel_freq)) +
geom_col() +
theme_minimal() +
theme(legend.position="none") +
labs(title = "Relative Frequency of Population Bins",
x     = "Population Bin",
y     = "Relative Frequency")
rm(list = list())
rm(list = ls())
car_stats <- mtcars %>%
summarize(n_mpg    = n(mpg),
min_mpg  = min(mpg),
max_mpg  = max(mpg),
avg_mpg  = mean(mpg))
rm(list = ls())
car_stats <- mtcars %>%
summarize(n_mpg    = n(),
min_mpg  = min(mpg),
max_mpg  = max(mpg),
avg_mpg  = mean(mpg))
kable(car_stats,
align = 'c',
col.names = c('N', 'Minimum', 'Maximum', 'Average'))
library(dplyr, quietly = TRUE)
library(ggplot2, quietly = TRUE)
library(kableExtra, quietly = TRUE)
library(tidyquant, quietly = TRUE)
rm(list = ls())
car_stats <- mtcars %>%
summarize(n_mpg    = n(),
min_mpg  = min(mpg),
max_mpg  = max(mpg),
avg_mpg  = mean(mpg))
kable(car_stats,
align  = 'c',
digits = 2,
col.names = c('N', 'Minimum', 'Maximum', 'Average'))
rm(list = ls())
library(censusapi)
library(dplyr)
library(kableExtra)
library(tidyverse)
county_pop <- getCensus(name = "acs/acs5",
vintage = 2023,
key = "9c1637a56ff93f0af6b4b1d0547ea048fe668175",
vars = c("NAME",
"B01001_001E"),
region = "county:*") %>%
rename(pop = B01001_001E) %>%
summarize(n_pop    = n(),
min_pop  = min(pop),
max_pop  = max(pop),
med_pop  = median(pop),
mean_pop = mean(pop))
kable(county_pop,
col.names = c("N", "Minimum", "Maximum",
"Median", "Mean"),
align = c('c','c','c','c','c'),
caption = 'Descriptive Statistics of U.S. Counties - Population') %>%
kable_styling(font_size = 12)
kable(county_pop,
col.names = c("N", "Minimum", "Maximum",
"Median", "Mean"),
align     = 'c',
format.args = list(big.mark = ",")
caption = 'Descriptive Statistics of U.S. Counties - Population') %>%
kable(county_pop,
col.names = c("N", "Minimum", "Maximum",
"Median", "Mean"),
align     = 'c',
format.args = list(big.mark = ","),
caption = 'Descriptive Statistics of U.S. Counties - Population') %>%
kable_styling(font_size = 12)
library(dplyr, quietly = TRUE)
library(ggplot2, quietly = TRUE)
library(kableExtra, quietly = TRUE)
library(tidyquant, quietly = TRUE)
rm(list = ls())
data(mtcars)
cars <- mtcars %>%
select(mpg, wt) %>%
summarize(mean_mpg = mean(mpg),
dev_mpg  = sum(mpg - mean(mpg)),
mean_wt  = mean(wt),
dev_wt   = sum(wt - mean(wt)))
kable(cars,
col.names = c("Average MPG",
"Sum of MPG Deviations",
"Average Weight",
"Sum of WT Deviations"),
align = c('c','c','c','c'),
caption = 'Mean Deviations of MT Cars') %>%
kable_styling(font_size = 12)
rm(list = ls())
data(mtcars)
cars <- mtcars %>%
select(mpg, wt) %>%
summarize(mean_mpg = mean(mpg),
dev_mpg  = sum(mpg - mean(mpg)),
mean_wt  = mean(wt),
dev_wt   = sum(wt - mean(wt)))
kable(cars,
col.names = c("Average MPG",
"Sum of MPG Deviations",
"Average Weight",
"Sum of WT Deviations"),
align = c('c','c','c','c'),
digits    = 3,
caption = 'Mean Deviations of MT Cars') %>%
kable_styling(font_size = 12)
kable(cars,
col.names = c("Average MPG",
"Sum of MPG Deviations",
"Average Weight",
"Sum of WT Deviations"),
align     = 'c',
digits    = 3,
caption = 'Mean Deviations of MT Cars') %>%
kable_styling(font_size = 12)
View(cars)
kable(cars,
col.names = c("Average MPG",
"Sum of MPG Deviations",
"Average Weight",
"Sum of WT Deviations"),
align     = 'c',
digits    = 15,
caption = 'Mean Deviations of MT Cars') %>%
kable_styling(font_size = 12)
kable(cars,
col.names = c("Average MPG",
"Sum of MPG Deviations",
"Average Weight",
"Sum of WT Deviations"),
align     = 'c',
digits    = 10,
caption = 'Mean Deviations of MT Cars') %>%
kable_styling(font_size = 12)
kable(cars,
col.names = c("Average MPG",
"Sum of MPG Deviations",
"Average Weight",
"Sum of WT Deviations"),
align     = 'c',
digits    = 15,
caption = 'Mean Deviations of MT Cars') %>%
kable_styling(font_size = 12)
rm(list = ls())
library(censusapi)
library(dplyr)
library(kableExtra)
library(tidyverse)
county_pop <- getCensus(name = "acs/acs5",
vintage = 2019,
key = "9c1637a56ff93f0af6b4b1d0547ea048fe668175",
vars = c("NAME",
"B01001_001E"),
region = "county:*") %>%
rename(pop = B01001_001E) %>%
summarize(med_pop  = median(pop),
mean_pop = mean(pop),
mean_05  = mean(pop, trim = 0.05),
mean_10  = mean(pop, trim = 0.10),
mean_20  = mean(pop, trim = 0.20),
mean_50  = mean(pop, trim = 0.50))
kable(county_pop,
col.names = c('Median', 'Mean',
'Trim 0.05', 'Trim 0.10',
'Trim 0.20', 'Trim 0.50'),
align = c('c','c','c','c','c','c'),
caption = 'Mean and Trimmed Means, 2019 Population') %>%
kable_styling(font_size = 12)
rm(list = ls())
library(censusapi)
library(dplyr)
library(kableExtra)
library(tidyverse)
county_pop <- getCensus(name = "acs/acs5",
vintage = 2019,
key = "9c1637a56ff93f0af6b4b1d0547ea048fe668175",
vars = c("NAME",
"B01001_001E"),
region = "county:*") %>%
rename(pop = B01001_001E) %>%
summarize(med_pop  = median(pop),
mean_pop = mean(pop),
mean_05  = mean(pop, trim = 0.05),
mean_10  = mean(pop, trim = 0.10),
mean_20  = mean(pop, trim = 0.20),
mean_50  = mean(pop, trim = 0.50))
kable(county_pop,
col.names = c('Median', 'Mean',
'Trim 0.05', 'Trim 0.10',
'Trim 0.20', 'Trim 0.50'),
align = c('c','c','c','c','c','c'),
caption = 'Mean and Trimmed Means, County Population') %>%
kable_styling(font_size = 12)
kable(county_pop,
col.names = c('Median', 'Mean',
'Trim 0.05', 'Trim 0.10',
'Trim 0.20', 'Trim 0.50'),
align     = 'c',
digits    = 2,
caption = 'Mean and Trimmed Means, County Population') %>%
kable_styling(font_size = 12)
rm(list = ls())
cars <- mtcars %>%
reframe(quantile   = scales::percent(c(0, 0.25, 0.5, 0.75 ,1)),
mpg      = quantile(mpg, c(0, 0.25, 0.5, 0.75, 1)),
cyl      = quantile(cyl, c(0, 0.25, 0.5, 0.75, 1)),
wt       = quantile(wt, c(0, 0.25, 0.5, 0.75, 1)))
kable(cars,
col.names = c('Percentile',
'MPG',
'Cyliners',
'Weight'),
align = c('c','c','c','c'),
caption = 'Quantiles of MTCARS') %>%
kable_styling(font_size = 12)
