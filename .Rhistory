library(dplyr)
library(ggplot2)
library(lubridate)
library(tidyquant)
library(dplyr, quietly = TRUE)
library(ggplot2, quietly = TRUE)
library(kableExtra, quietly = TRUE)
library(lubridate, quietly = TRUE)
library(tidyquant, quietly = TRUE)
quarto::quarto_render()
library(dplyr, quietly = TRUE)
library(ggplot2, quietly = TRUE)
library(kableExtra, quietly = TRUE)
library(lubridate, quietly = TRUE)
library(tidyquant, quietly = TRUE)
pkgs <- c("dplyr",
"ggplot2",
"kableExtra",
"lubridate",
"tidyquant")  # add all packages students need
for (p in pkgs) {
if (!requireNamespace(p, quietly = TRUE)) {
suppressMessages(suppressWarnings(
webr::install(p, quiet = TRUE)
))
}
suppressMessages(library(p, character.only = TRUE))
}
quarto::quarto_render()
quarto::quarto_render()
quarto::quarto_render()
quarto::quarto_render()
quarto::quarto_render()
quarto::quarto_render()
quatro::quarto_render()
library(quarto)
quartro::quarto_render()
install.packages(c("boot", "Matrix"))
install.packages(c("broom", "colorspace", "crosstalk", "curl", "dbplyr", "DT", "dtplyr", "evaluate", "forcats", "gargle", "ggplot2", "googledrive", "googlesheets4", "hardhat", "later", "magrittr", "openssl", "pillar", "progressr", "ragg", "RcppArmadillo", "rmarkdown", "robustbase", "rvest", "stringr", "systemfonts", "textshaping", "timetk", "vroom", "xaringan", "xaringanthemer", "xfun", "xml2"))
install.packages(c("broom", "colorspace", "crosstalk", "curl",
quarto::quarto_render()
quarto::quarto_render()
quarto::quarto_render()
quarto::quarto_render()
quarto::quarto_render()
quarto::quarto_render()
quarto::quarto_render()
quarto::quarto_render()
library(dplyr, quietly = TRUE)
library(ggplot2, quietly = TRUE)
library(kableExtra, quietly = TRUE)
library(lubridate, quietly = TRUE)
library(tidyquant, quietly = TRUE)
rm(list = ls())
#Load packages
library(dplyr)
library(lubridate)
library(tidyverse)
library(kableExtra)
#Assign the character Timothy to name_1
name1 <- as.character("Timothy")
#Assign the numeric value 06250 to x_4
x4 <- 06250
#Assign 06250 as a character
name2 <- as.character("06250")
#Convert the character 06250 to numeric
name3 <- as.numeric(name2)
# Output
name1
x4
name2
name3
rm(list = ls())
#Load packages
library(dplyr, quietly = TRUE)
library(lubridate, quietly = TRUE)
library(tidyverse, quietly = TRUE)
library(kableExtra, quietly = TRUE)
#Assign the character Timothy to name_1
name1 <- as.character("Timothy")
#Assign the numeric value 06250 to x_4
x4 <- 06250
#Assign 06250 as a character
name2 <- as.character("06250")
#Convert the character 06250 to numeric
name3 <- as.numeric(name2)
# Output
name1
x4
name2
name3
rm(list = ls())
#Load packages
library(dplyr, quietly = TRUE)
library(lubridate, quietly = TRUE)
library(tidyverse, quietly = TRUE)
library(kableExtra, quietly = TRUE)
#Assign the character Timothy to name_1
name1 <- as.character("Timothy")
#Assign the numeric value 06250 to x_4
x4 <- 06250
#Assign 06250 as a character
name2 <- as.character("06250")
#Convert the character 06250 to numeric
name3 <- as.numeric(name2)
# Output
name1
x4
name2
name3
library(dplyr, quietly = TRUE)
library(ggplot2, quietly = TRUE)
library(kableExtra, quietly = TRUE)
library(lubridate, quietly = TRUE)
library(tidyquant, quietly = TRUE)
rm(list = ls())
#Load packages
library(dplyr)
library(lubridate)
library(tidyverse)
library(kableExtra)
# Assign values to x1, x2, x3, x4
x1 <- 1
x2 <- -5
x3 <- 136
x4 <- 0.47
x5 <- 4840
#Create a row vector
x5 <- c(12, 13, 14, 25, 100)
#Use existing variables to create a row vector
x6 <- c(x1, x2, x3, x4, x5)
# Use Kable To Create Tables of X5 and X6
kable(x5)
kable(x6)
quarto::quarto_render()
rm(list = ls())
#Load packages
library(dplyr, quiet = TRUE)
library(kableExtra, quiet = TRUE)
# Assign values to x1, x2, x3, x4
x1 <- 1
x2 <- -5
x3 <- 136
x4 <- 0.47
x5 <- 4840
#Create a row vector
x5 <- c(12, 13, 14, 25, 100)
#Use existing variables to create a row vector
x6 <- c(x1, x2, x3, x4, x5)
# Use Kable To Create Tables of X5 and X6
kable(x5)
kable(x6)
library(dplyr, quietly = TRUE)
library(ggplot2, quietly = TRUE)
library(kableExtra, quietly = TRUE)
library(lubridate, quietly = TRUE)
library(tidyquant, quietly = TRUE)
rm(list = ls())
#Load packages
library(dplyr, quiet = TRUE)
library(kableExtra, quiet = TRUE)
# Assign values to x1, x2, x3, x4
x1 <- 1
x2 <- -5
x3 <- 136
x4 <- 0.47
#Create a row vector
x5 <- c(12, 13, 14, 25, 100)
#Use existing variables to create a row vector
x6 <- c(x1, x2, x3, x4, x5)
# Use Kable To Create Tables of X5 and X6
kable(x5,
align = 'c',
digits = 2,
col.names = c('X5'))
kable(x6,
align = 'c',
digits = 1,
col.names = c('X6'))
rm(list = ls())
#Load packages
library(dplyr, quiet = TRUE)
library(kableExtra, quiet = TRUE)
# Assign values to x1, x2, x3, x4
x1 <- 1
x2 <- -5
x3 <- 136
x4 <- 0.47
#Create a row vector
x5 <- c(12, 13, 14, 25, 100)
#Use existing variables to create a row vector
x6 <- c(x1, x2, x3, x4, x5)
# Use Kable To Create Tables of X5 and X6
# align = 'c' -> aligns to center
# digits = 2  ->
kable(x5,
align = 'c',
col.names = c('X5'))
kable(x6,
align = 'c',
digits = 1,
col.names = c('X6'))
rm(list = ls())
#Load packages
library(dplyr, quiet = TRUE)
library(kableExtra, quiet = TRUE)
# Assign values to x1, x2, x3, x4
x1 <- 1
x2 <- -5
x3 <- 136
x4 <- 0.47
#Create a row vector
x5 <- c(12, 13, 14, 25, 100)
#Use existing variables to create a row vector
x6 <- c(x1, x2, x3, x4, x5)
# Use Kable To Create Tables of X5 and X6
# align = 'c' -> aligns to center
# digits = 2  ->
kable(x5,
align = 'c',
digits = 0,
col.names = c('X5'))
kable(x6,
align = 'c',
digits = 1,
col.names = c('X6'))
rm(list = ls())
#Load packages
library(dplyr, quiet = TRUE)
library(kableExtra, quiet = TRUE)
# Assign values to x1, x2, x3, x4
x1 <- 1
x2 <- -5
x3 <- 136
x4 <- 0.47
#Create a row vector
x5 <- c(12, 13, 14, 25, 100)
#Use existing variables to create a row vector
x6 <- c(x1, x2, x3, x4, x5)
# Use kable To Create Tables of X5 and X6
# align = 'c' -> aligns to center
# digits = 0  -> no decimals
# col.names -> sets a name for the column
kable(x5,
align = 'c',
digits = 0,
col.names = c('X5'))
kable(x6,
align = 'c',
digits = 1,
col.names = c('X6'))
rm(list = ls())
#Load packages
library(dplyr, quiet = TRUE)
library(kableExtra, quiet = TRUE)
# Assign values to x1, x2, x3, x4
x1 <- 1
x2 <- -5
x3 <- 136
x4 <- 0.47
#Create a row vector
x5 <- c(12, 13, 14, 25, 100)
#Transpose x5
x6 <- t(x5)
#Use existing variables to create a row vector
#x6 <- c(x1, x2, x3, x4, x5)
# Use kable To Create Tables of X5 and X6
# align = 'c' -> aligns to center
# digits = 0  -> no decimals
# col.names -> sets a name for the column
kable(x5,
align = 'c',
digits = 0,
col.names = c('X5'))
kable(x6,
align = 'c',
digits = 1,
col.names = c('X6'))
rm(list = ls())
#Load packages
library(dplyr, quiet = TRUE)
library(kableExtra, quiet = TRUE)
# Assign values to x1, x2, x3, x4
x1 <- 1
x2 <- -5
x3 <- 136
x4 <- 0.47
#Create a row vector
x5 <- c(12, 13, 14, 25, 100)
#Transpose x5
x6 <- t(x5)
#Use existing variables to create a row vector
#x6 <- c(x1, x2, x3, x4, x5)
# Use kable To Create Tables of X5 and X6
# align = 'c' -> aligns to center
# digits = 0  -> no decimals
# col.names -> sets a name for the column
kable(x5,
align = 'c',
digits = 0,
col.names = c('X5'))
kable(x6,
align = 'c',
digits = 1)
digits = c('x1','x2','x3','x4')
rm(list = ls())
#Load packages
library(dplyr, quiet = TRUE)
library(kableExtra, quiet = TRUE)
# Assign values to x1, x2, x3, x4
x1 <- 1
x2 <- -5
x3 <- 136
x4 <- 0.47
#Create a row vector
x5 <- c(12, 13, 14, 25, 100)
#Transpose x5
x6 <- t(x5)
#Use existing variables to create a row vector
#x6 <- c(x1, x2, x3, x4, x5)
# Use kable To Create Tables of X5 and X6
# align = 'c' -> aligns to center
# digits = 0  -> no decimals
# col.names -> sets a name for the column
kable(x5,
align = 'c',
digits = 0,
col.names = c('X5'))
kable(x6,
align = 'c',
digits = c('x1','x2','x3','x4')
rm(list = ls())
#Load packages
library(dplyr, quiet = TRUE)
library(kableExtra, quiet = TRUE)
# Assign values to x1, x2, x3, x4
x1 <- 1
x2 <- -5
x3 <- 136
x4 <- 0.47
#Create a row vector
x5 <- c(12, 13, 14, 25, 100)
#Transpose x5
x6 <- t(x5)
#Use existing variables to create a row vector
#x6 <- c(x1, x2, x3, x4, x5)
# Use kable To Create Tables of X5 and X6
# align = 'c' -> aligns to center
# digits = 0  -> no decimals
# col.names -> sets a name for the column
kable(x5,
align = 'c',
digits = 0,
col.names = c('X5'))
kable(x6,
align = 'c',
digits = c('x1','x2','x3','x4'))
kable(x6,
align = 'c',
col.names = c('x1','x2','x3','x4'))
kable(x6,
align = 'c',
col.names = c('A','B','C','D','E'))
rm(list = ls())
#Load packages
library(dplyr, quiet = TRUE)
library(kableExtra, quiet = TRUE)
# Assign values to x1, x2, x3, x4
x1 <- 1
x2 <- -5
x3 <- 136
x4 <- 0.47
#Create a row vector
x5 <- c(12, 13, 14, 25, 100)
#Transpose x5
x6 <- t(x5)
#Use existing variables to create a row vector
x7 <- c(x1, x2, x3, x4, x5)
# Use kable To Create Tables of X5 and X6
# align = 'c' -> aligns to center
# digits = 0  -> no decimals
# col.names -> sets a name for the column
kable(x5,
align = 'c',
digits = 0,
col.names = c('X5'))
kable(x6,
align = 'c',
col.names = c('A','B','C','D','E'))
kable(x7,
align = 'c',
digits = 0,
col.names = c('X57'))
rm(list = ls())
#Load packages
library(dplyr, quiet = TRUE)
library(kableExtra, quiet = TRUE)
# Assign values to x1, x2, x3, x4
x1 <- 1
x2 <- -5
x3 <- 136
x4 <- 0.47
#Create a row vector
x5 <- c(12, 13, 14, 25, 100)
#Transpose x5
x6 <- t(x5)
#Use existing variables to create a row vector
x7 <- c(x1, x2, x3, x4, x5)
# Use kable To Create Tables of X5 and X6
# align = 'c' -> aligns to center
# digits = 0  -> no decimals
# col.names -> sets a name for the column
kable(x5,
align = 'c',
digits = 0,
col.names = c('X5'))
kable(x6,
align = 'c',
col.names = c('A','B','C','D','E'))
kable(x7,
align = 'c',
digits = 0,
col.names = c('X7'))
#Output x5 * 2
kable(x5*2,
align = 'c',
digits = 2,
col.names = c('X5 * 2'))
kable(x5*2)
#Assign x5*2 to x7
x8 <- x5*2
kable(x7,
align = 'c',
digits = 2,
col.names = c('X7'))
kable(x7,
align = 'c',
digits = 1,
col.names = c('X7'))
kable(x8,
align = 'c',
digits = 1,
col.names = c('X8'))
#Output x5 * 2
kable(x5*2,
align = 'c',
digits = 2,
col.names = c('X5 * 2'))
kable(x5*2)
#Assign x5*2 to x7
x8 <- x5*2
kable(x8,
align = 'c',
digits = 1,
col.names = c('X8'))
rm(list = ls())
#Load packages
library(kableExtra, quiet = TRUE)
# Assign values to x1, x2, x3, x4
x1 <- 1
x2 <- -5
x3 <- 136
x4 <- 0.47
#Create a row vector
x5 <- c(12, 13, 14, 25, 100)
#Transpose x5
x6 <- t(x5)
#Use existing variables to create a row vector
x7 <- c(x1, x2, x3, x4, x5)
# Use kable To Create Tables of X5 and X6
# align = 'c' -> aligns to center
# digits = 0  -> no decimals
# col.names -> sets a name for the column
kable(x5,
align = 'c',
digits = 0,
col.names = c('X5'))
kable(x6,
align = 'c',
col.names = c('A','B','C','D','E'))
kable(x7,
align = 'c',
digits = 0,
col.names = c('X7'))
rm(list = ls())
#Load packages
library(kableExtra, quiet = TRUE)
#Create a vector
x5 <- c(12, 13, 14, 25, 100)
kable(x5*2,
align = 'c',
digits = 2,
col.names = c('X5 * 2'),
caption = 'Table of Variable X5 - Each Element Times 2')
#Assign x5*2 to x8
x8 <- x5*2
kable(x8,
align = 'c',
digits = 1,
col.names = c('X8'),
caption = 'Table of Variable X8')
quarto::quarto_render()
vector_1 <- c(4, 16, 25, 81, 10000)
vector_2 <- sqrt(vector 1)
sqrt(vector_1)
quarto::quarto_render()
quarto::quarto_render()
quarto::quarto_render()
