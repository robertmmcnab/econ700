n       = 6000) %>%
select(n, everything())
sample_2 <- population %>%
slice_sample(n = 600, replace = FALSE) %>%
summarize(average = mean(income),
sd      = sd(income),
se      = sd(income)/sqrt(600)) %>%
mutate(p_x_bar = pnorm(52400, 52500, se),
n       = 600) %>%
select(n, everything())
sample_3 <- population %>%
slice_sample(n = 60, replace = FALSE) %>%
summarize(average = mean(income),
sd      = sd(income),
se      = sd(income)/sqrt(600)) %>%
mutate(p_x_bar = pnorm(52400, 52500, se),
n       = 60) %>%
select(n, everything())
output <- sample_1 %>%
rbind(sample_2) %>%
rbind(sample_3) %>%
arrange(n)
kable(output,
align = 'c',
digits = 3,
col.names = c('n', 'X-bar', 'SD(X)', 'SE(X-bar)','P(X-bar <= 52400)')) %>%
kable_classic()
rm(list = ls())
set.seed(1234)
library(dplyr)
library(kableExtra)
population <- tibble(income = rnorm(500000, 52500, 2750))
sample_1 <- population %>%
slice_sample(n = 3600, replace = FALSE) %>%
summarize(average = mean(income),
sd      = sd(income),
se      = sd(income)/sqrt(6000)) %>%
mutate(p_x_bar = pnorm(52400, 52500, se),
n       = 6000) %>%
select(n, everything())
sample_2 <- population %>%
slice_sample(n = 600, replace = FALSE) %>%
summarize(average = mean(income),
sd      = sd(income),
se      = sd(income)/sqrt(600)) %>%
mutate(p_x_bar = pnorm(52400, 52500, se),
n       = 600) %>%
select(n, everything())
sample_3 <- population %>%
slice_sample(n = 60, replace = FALSE) %>%
summarize(average = mean(income),
sd      = sd(income),
se      = sd(income)/sqrt(60)) %>%
mutate(p_x_bar = pnorm(52400, 52500, se),
n       = 60) %>%
select(n, everything())
output <- sample_1 %>%
rbind(sample_2) %>%
rbind(sample_3) %>%
arrange(n)
kable(output,
align = 'c',
digits = 3,
col.names = c('n', 'X-bar', 'SD(X)', 'SE(X-bar)','P(X-bar <= 52400)')) %>%
kable_classic()
rm(list = ls())
library(dplyr)
library(ggplot2)
library(kableExtra)
library(tibble)
set.seed(1234)
population <- tibble(income = rnorm(500000, mean = 52500, sd = 2750))
n <- 3600
n_samples <- 1000
sampling_results <- replicate(n_samples,
{
sample_mean <- population %>%
slice_sample(n = n, replace = FALSE) %>%
summarize(mean_income = mean(income)) %>%
pull(mean_income)
return(sample_mean)
}
)
df_sampling <- tibble(sample_mean = sampling_results)
summary_stats <- df_sampling %>%
summarize(mean_of_means = mean(sample_mean),
sd_of_means   = sd(sample_mean),
se_theoretical = 2750 / sqrt(n))
# --- Step 5: Display summary table ---
kbl(summary_stats, caption = "Sampling Distribution Summary") %>%
kable_styling(full_width = FALSE)
# --- Step 6: Visualize sampling distribution ---
ggplot(df_sampling, aes(x = sample_mean)) +
geom_histogram(binwidth = 25, fill = "skyblue", color = "white") +
geom_vline(xintercept = 52500, color = "red", linetype = "dashed", linewidth = 1.2) +
labs(
title = "Sampling Distribution of Sample Means (n = 3600)",
subtitle = "Red dashed line shows population mean (Î¼ = 52,500)",
x = "Sample Mean Income",
y = "Frequency"
) +
theme_minimal(base_size = 14)
rm(list = ls())
library(AER)
library(dplyr)
library(ggplot2)
library(kableExtra)
data("CASchools")
nsample <- 50
stdev <- sd(CASchools$students)
sterror  <- stdev/sqrt(nsample)
alpha <- 0.05
ci <- 1 - (alpha/2)
z_ci <- qnorm(ci, 0, 1)
error <- z_ci*sterror
samples <- CASchools %>%
slice_sample(n = 50) %>%
summarize(mean_students = mean(students))
interval <- samples %>%
mutate(lower_ci = mean_students - error,
upper_ci = mean_students + error)
kable(interval,
align       = "ccc",
caption     = "Confidence Interval",
col.names   = c("Sample Average", "Lower Bound",
"Upper Bound")) %>%
kable_styling(font_size = 12)
rm(list = ls())
library(dplyr)
library(ggplot2)
library(kableExtra)
ggplot(data.frame(x = c(-5, 5)),
aes(x = x)) +
stat_function(fun = dt,
args = list(df = 1),
linewidth = 1.2,
color = "dark blue") +
stat_function(fun = dnorm,
args = list(mean = 0, sd = 1),
linewidth = 1.2,
color = "red") +
theme_minimal() +
labs(x = "x",
y = "P(x)",
title = "Standard Normal and T Distribution",
subtitle = "1 degree of freedom")
population <- tibble(age = runif(100000, a = 25, b = 50))
population <- tibble(age = runif(100000, min = 25, max  = 50))
sample <- population %>%
slice.sample(n = sample_size)
rm(list = ls())
library(dplyr)
library(ggplot2)
library(kableExtra)
sample_size = 250
population <- tibble(age = rnorm(100000, mean = 23.5, sd = 3))
sample <- population %>%
slice.sample(n = sample_size)
sample <- population %>%
slice_sample(n = sample_size)
sample <- population %>%
slice_sample(n = sample_size) %>%
summarize(samp_avg = mean(age),
samp_sd  = sd(age),
samp_se  = sd(age)/sample_size)
View(sample)
rm(list = ls())
library(dplyr)
library(ggplot2)
library(kableExtra)
sample_size = 250
population <- tibble(age = rnorm(100000, mean = 23.5, sd = 5))
sample <- population %>%
slice_sample(n = sample_size) %>%
summarize(samp_avg = mean(age),
samp_sd  = sd(age),
samp_se  = sd(age)/sample_size)
View(sample)
rm(list = ls())
library(dplyr)
library(ggplot2)
library(kableExtra)
sample_size = 500
population <- tibble(age = rnorm(100000, mean = 23.5, sd = 5))
sample <- population %>%
slice_sample(n = sample_size) %>%
summarize(samp_avg = mean(age),
samp_sd  = sd(age),
samp_se  = sd(age)/sample_size)
View(sample)
rm(list = ls())
library(dplyr)
library(ggplot2)
library(kableExtra)
sample_size = 500
population <- tibble(income = rnorm(100000, mean = 52500, sd = 2750))
sample <- population %>%
slice_sample(n = sample_size) %>%
summarize(samp_avg = mean(age),
samp_sd  = sd(age),
samp_se  = sd(age)/sample_size)
sample <- population %>%
slice_sample(n = sample_size) %>%
summarize(samp_avg = mean(income),
samp_sd  = sd(income),
samp_se  = sd(income)/sample_size)
View(sample)
sample <- population %>%
slice_sample(n = sample_size) %>%
summarize(samp_avg = mean(income),
samp_sd  = sd(income),
samp_se  = sd(income)/sqrt(sample_size))
View(sample)
View(sample)
rm(list = ls())
library(dplyr)
library(ggplot2)
library(kableExtra)
sample_size = 500
alpha_1 = 0.10
alpha_2 = 0.05
alpha_3 = 0.01
ci_1 <- 1 - alpha_1/2
ci_2 <- 1 - alpha_2/2
ci_3 <- 1 - alpha_3/3
z_ci_1 <- qnorm(ci_1, 0, 1)
z_ci_2 <- qnorm(ci_2, 0, 1)
z_ci_3 <- qnorm(ci_3, 0, 1)
sample <- population %>%
slice_sample(n = sample_size) %>%
summarize(samp_avg = mean(income),
samp_sd  = sd(income),
samp_se  = sd(income)/sqrt(sample_size))
rm(list = ls())
library(dplyr)
library(ggplot2)
library(kableExtra)
sample_size = 500
alpha_1 = 0.10
alpha_2 = 0.05
alpha_3 = 0.01
ci_1 <- 1 - alpha_1/2
ci_2 <- 1 - alpha_2/2
ci_3 <- 1 - alpha_3/3
z_ci_1 <- qnorm(ci_1, 0, 1)
z_ci_2 <- qnorm(ci_2, 0, 1)
z_ci_3 <- qnorm(ci_3, 0, 1)
population <- tibble(income = rnorm(100000, mean = 52500, sd = 2750))
sample <- population %>%
slice_sample(n = sample_size) %>%
summarize(samp_avg = mean(income),
samp_sd  = sd(income),
samp_se  = sd(income)/sqrt(sample_size))
View(sample)
moe <- sample %>%
mutate(lower_1 = samp_avg - z_ci_1 * samp_se)
View(moe)
moe <- sample %>%
mutate(lower_1 = samp_avg - z_ci_1 * samp_se,
upper_1 = samp_avg - z_ci_1 * samp_se)
View(sample)
View(moe)
moe <- sample %>%
mutate(lower_1 = samp_avg - z_ci_1 * samp_se,
upper_1 = samp_avg + z_ci_1 * samp_se,
lower_2 = samp_avg - z_ci_2 * samp_se,
upper_2 = samp_avg + z_ci_2 * samp_se,
lower_3 = samp_avg - z_ci_3 * samp_se,
upper_3 = samp_avg + z_ci_3 * samp_se)
View(moe)
rm(list = ls())
library(dplyr)
library(ggplot2)
library(kableExtra)
sample_size = 500
alpha_1 = 0.10
alpha_2 = 0.05
alpha_3 = 0.01
ci_1 <- 1 - alpha_1/2
ci_2 <- 1 - alpha_2/2
ci_3 <- 1 - alpha_3/3
z_ci_1 <- qnorm(ci_1, 0, 1)
z_ci_2 <- qnorm(ci_2, 0, 1)
z_ci_3 <- qnorm(ci_3, 0, 1)
population <- tibble(income = rnorm(100000, mean = 52500, sd = 2750))
sample <- population %>%
slice_sample(n = sample_size) %>%
summarize(samp_avg = mean(income),
samp_sd  = sd(income),
samp_se  = sd(income)/sqrt(sample_size))
moe <- sample %>%
mutate(lower_1 = samp_avg - z_ci_1 * samp_se,
upper_1 = samp_avg + z_ci_1 * samp_se,
lower_2 = samp_avg - z_ci_2 * samp_se,
upper_2 = samp_avg + z_ci_2 * samp_se,
lower_3 = samp_avg - z_ci_3 * samp_se,
upper_3 = samp_avg + z_ci_3 * samp_se)
kable(interval,
align       = "c",
digits      = 2,
caption     = "Confidence Intervals",
col.names   = c("Sample Average",
"Sample SD",
"Sample Avg SE",
"Lower Bound (10%)",
"Upper Bound (10%)",
"Lower Bound (5%)",
"Upper Bound (5%)",
"Lower Bound (1%)",
"Upper Bound (1%)")) %>%
kable_styling(font_size = 12)
rm(list = ls())
library(dplyr)
library(ggplot2)
library(kableExtra)
sample_size = 500
alpha_1 = 0.10
alpha_2 = 0.05
alpha_3 = 0.01
ci_1 <- 1 - alpha_1/2
ci_2 <- 1 - alpha_2/2
ci_3 <- 1 - alpha_3/3
z_ci_1 <- qnorm(ci_1, 0, 1)
z_ci_2 <- qnorm(ci_2, 0, 1)
z_ci_3 <- qnorm(ci_3, 0, 1)
population <- tibble(income = rnorm(100000, mean = 52500, sd = 2750))
sample <- population %>%
slice_sample(n = sample_size) %>%
summarize(samp_avg = mean(income),
samp_sd  = sd(income),
samp_se  = sd(income)/sqrt(sample_size))
moe <- sample %>%
mutate(lower_1 = samp_avg - z_ci_1 * samp_se,
upper_1 = samp_avg + z_ci_1 * samp_se,
lower_2 = samp_avg - z_ci_2 * samp_se,
upper_2 = samp_avg + z_ci_2 * samp_se,
lower_3 = samp_avg - z_ci_3 * samp_se,
upper_3 = samp_avg + z_ci_3 * samp_se)
kable(moe,
align       = "c",
digits      = 2,
caption     = "Confidence Intervals",
col.names   = c("Sample Average",
"Sample SD",
"Sample Avg SE",
"Lower Bound (10%)",
"Upper Bound (10%)",
"Lower Bound (5%)",
"Upper Bound (5%)",
"Lower Bound (1%)",
"Upper Bound (1%)")) %>%
kable_styling(font_size = 12)
rm(list = ls())
library(dplyr)
library(ggplot2)
library(kableExtra)
library(ggplot2)
ggplot(data.frame(x = c(-5, 5)),
aes(x = x)) +
stat_function(fun = dt,
args = list(df = 10),
linewidth = 1.2,
color = "dark blue") +
stat_function(fun = dnorm,
args = list(mean = 0, sd = 1),
linewidth = 1.2,
color = "red") +
theme_minimal() +
labs(x = "x",
y = "P(x)",
title = "Standard Normal and T-Distribution",
subtitle = "10 degrees of freedom")
rm(list = ls())
library(dplyr)
library(ggplot2)
library(kableExtra)
pop = 100000
mu = 50000
sigma = 9700
nsample <- 500
alpha <- 0.10
ci <- 1 - (alpha/2)
t_ci <- qt(ci, nsample - 1)
population <- data.frame(x = rnorm(pop, mu, sigma))
samples <- population %>%
slice_sample(n = nsample) %>%
summarize(samp_avg = mean(x),
samp_sd  = sd(x)) %>%
mutate(std_err = samp_sd/sqrt(nsample),
moe     = t_ci*std_err) %>%
mutate(lower_ci = samp_avg - moe,
upper_ci = samp_avg + moe)
kable(samples,
align       = "cccccc",
caption     = "Confidence Interval",
col.names   = c("Average", "Std Dev",
"Std Error", "MOE",
"Lower Bound", "Upper Bound")) %>%
kable_styling(font_size = 12)
qt(alpha/2,n-1)
rm(list = ls())
alpha = 0.05
n = 80
xbar = 9312
s = 4007
qt(alpha/2,n-1)
rm(list = ls())
alpha = 0.05
n = 80
xbar = 9312
s = 4007
qt(alpha/2,n-1)
qt(0.975,69)
rm(list = ls())
alpha = 0.05
n = 70
xbar = 9312
s = 4007
qt(alpha/2,n-1)
qt(0.975,69)
moe <- (xbar,
rm(list = ls())
alpha = 0.05
n = 70
xbar = 9312
s = 4007
t_stat <- qt(alpha/2,n-1)
moe <- (xbar,
rm(list = ls())
alpha = 0.05
n = 70
xbar = 9312
s = 4007
t_stat <- qt(alpha/2,n-1)
moe <- (xbar = xbar,
rm(list = ls())
alpha = 0.05
n = 70
xbar = 9312
s = 4007
t_stat <- qt(alpha/2,n-1)
moe <- tibble(xbar = xbar,
se = s/sqrt(n),
lower = xbar - t_stat*se,
upper = xbar + t_stat*se)
rm(list = ls())
alpha = 0.05
n = 70
xbar = 9312
s = 4007
t_stat <- qt(alpha/2,n-1)
moe <- tibble(xbar = xbar,
se = s/sqrt(n),
t-stat = t-stat,
rm(list = ls())
alpha = 0.05
n = 70
xbar = 9312
s = 4007
t_stat <- qt(alpha/2,n-1)
moe <- tibble(xbar = xbar,
se = s/sqrt(n),
t-stat = t_stat,
rm(list = ls())
alpha = 0.05
n = 70
xbar = 9312
s = 4007
t_stat <- qt(alpha/2,n-1)
moe <- tibble(xbar = xbar,
se = s/sqrt(n),
t_stat = t_stat,
lower = xbar - t_stat*se,
upper = xbar + t_stat*se)
4007/sqrt(70)
t_stat*4007/sqrt(70)
9312+t_stat*4007/sqrt(70)
rm(list = ls())
alpha = 0.05
n = 70
xbar = 9312
s = 4007
t_stat <- qt(alpha/2,n-1, lower.tail = FALSE}
rm(list = ls())
alpha = 0.05
n = 70
xbar = 9312
s = 4007
t_stat <- qt(alpha/2,n-1, lower.tail = FALSE)
moe <- tibble(xbar = xbar,
se = s/sqrt(n),
t_stat = t_stat,
lower = xbar - t_stat*se,
upper = xbar + t_stat*se)
rm(list = ls())
alpha = 0.05
n = 70
xbar = 9312
s = 4007
t_stat <- qt(alpha/2,n-1, lower.tail = FALSE)
moe <- tibble(xbar = xbar,
se = s/sqrt(n),
t_stat = t_stat,
lower = xbar - t_stat*se,
upper = xbar + t_stat*se)
kable(moe,
align = 'c',
digits = 3,
col.names = c('X-Bar','SE(X-Bar)','T-Statistic',
'Lower Bound', 'Upper Bound')) %>%
kable_classic()
quarto::quarto_render()
